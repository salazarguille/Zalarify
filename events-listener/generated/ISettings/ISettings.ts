// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class PlatformPaused extends ethereum.Event {
  get params(): PlatformPaused__Params {
    return new PlatformPaused__Params(this);
  }
}

export class PlatformPaused__Params {
  _event: PlatformPaused;

  constructor(event: PlatformPaused) {
    this._event = event;
  }

  get thisContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reason(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class PlatformUnpaused extends ethereum.Event {
  get params(): PlatformUnpaused__Params {
    return new PlatformUnpaused__Params(this);
  }
}

export class PlatformUnpaused__Params {
  _event: PlatformUnpaused;

  constructor(event: PlatformUnpaused) {
    this._event = event;
  }

  get thisContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reason(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class ISettings extends ethereum.SmartContract {
  static bind(address: Address): ISettings {
    return new ISettings("ISettings", address);
  }

  pausePlatform(_reason: string): boolean {
    let result = super.call("pausePlatform", "pausePlatform(string):(bool)", [
      ethereum.Value.fromString(_reason)
    ]);

    return result[0].toBoolean();
  }

  try_pausePlatform(_reason: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "pausePlatform",
      "pausePlatform(string):(bool)",
      [ethereum.Value.fromString(_reason)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  unpausePlatform(_reason: string): boolean {
    let result = super.call(
      "unpausePlatform",
      "unpausePlatform(string):(bool)",
      [ethereum.Value.fromString(_reason)]
    );

    return result[0].toBoolean();
  }

  try_unpausePlatform(_reason: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "unpausePlatform",
      "unpausePlatform(string):(bool)",
      [ethereum.Value.fromString(_reason)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPlatformPaused(): boolean {
    let result = super.call(
      "isPlatformPaused",
      "isPlatformPaused():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_isPlatformPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPlatformPaused",
      "isPlatformPaused():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class PausePlatformCall extends ethereum.Call {
  get inputs(): PausePlatformCall__Inputs {
    return new PausePlatformCall__Inputs(this);
  }

  get outputs(): PausePlatformCall__Outputs {
    return new PausePlatformCall__Outputs(this);
  }
}

export class PausePlatformCall__Inputs {
  _call: PausePlatformCall;

  constructor(call: PausePlatformCall) {
    this._call = call;
  }

  get _reason(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class PausePlatformCall__Outputs {
  _call: PausePlatformCall;

  constructor(call: PausePlatformCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UnpausePlatformCall extends ethereum.Call {
  get inputs(): UnpausePlatformCall__Inputs {
    return new UnpausePlatformCall__Inputs(this);
  }

  get outputs(): UnpausePlatformCall__Outputs {
    return new UnpausePlatformCall__Outputs(this);
  }
}

export class UnpausePlatformCall__Inputs {
  _call: UnpausePlatformCall;

  constructor(call: UnpausePlatformCall) {
    this._call = call;
  }

  get _reason(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class UnpausePlatformCall__Outputs {
  _call: UnpausePlatformCall;

  constructor(call: UnpausePlatformCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
