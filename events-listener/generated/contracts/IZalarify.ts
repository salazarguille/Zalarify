// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewCompanyCreated extends EthereumEvent {
  get params(): NewCompanyCreated__Params {
    return new NewCompanyCreated__Params(this);
  }
}

export class NewCompanyCreated__Params {
  _event: NewCompanyCreated;

  constructor(event: NewCompanyCreated) {
    this._event = event;
  }

  get thisContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get companyAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get createdAt(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class IZalarify extends SmartContract {
  static bind(address: Address): IZalarify {
    return new IZalarify("IZalarify", address);
  }

  createCompany(
    _id: Bytes,
    _name: Bytes,
    _website: Bytes,
    _description: Bytes
  ): Address {
    let result = super.call("createCompany", [
      EthereumValue.fromFixedBytes(_id),
      EthereumValue.fromFixedBytes(_name),
      EthereumValue.fromFixedBytes(_website),
      EthereumValue.fromFixedBytes(_description)
    ]);
    return result[0].toAddress();
  }

  getCompany(_id: Bytes): Address {
    let result = super.call("getCompany", [EthereumValue.fromFixedBytes(_id)]);
    return result[0].toAddress();
  }

  getCompany1(_id: Bytes): Address {
    let result = super.call("getCompany", [EthereumValue.fromFixedBytes(_id)]);
    return result[0].toAddress();
  }
}

export class CreateCompanyCall extends EthereumCall {
  get inputs(): CreateCompanyCall__Inputs {
    return new CreateCompanyCall__Inputs(this);
  }

  get outputs(): CreateCompanyCall__Outputs {
    return new CreateCompanyCall__Outputs(this);
  }
}

export class CreateCompanyCall__Inputs {
  _call: CreateCompanyCall;

  constructor(call: CreateCompanyCall) {
    this._call = call;
  }

  get _id(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _name(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _website(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _description(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class CreateCompanyCall__Outputs {
  _call: CreateCompanyCall;

  constructor(call: CreateCompanyCall) {
    this._call = call;
  }

  get companyAddress(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
