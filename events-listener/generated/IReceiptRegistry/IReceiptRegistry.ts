// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewReceiptCreated extends ethereum.Event {
  get params(): NewReceiptCreated__Params {
    return new NewReceiptCreated__Params(this);
  }
}

export class NewReceiptCreated__Params {
  _event: NewReceiptCreated;

  constructor(event: NewReceiptCreated) {
    this._event = event;
  }

  get thisContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get company(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get employee(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get receiptHash(): string {
    return this._event.parameters[3].value.toString();
  }

  get path(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class IReceiptRegistry extends ethereum.SmartContract {
  static bind(address: Address): IReceiptRegistry {
    return new IReceiptRegistry("IReceiptRegistry", address);
  }

  createReceipt(
    _company: Address,
    _employee: Address,
    _path: string,
    _receiptHash: string
  ): boolean {
    let result = super.call(
      "createReceipt",
      "createReceipt(address,address,string,string):(bool)",
      [
        ethereum.Value.fromAddress(_company),
        ethereum.Value.fromAddress(_employee),
        ethereum.Value.fromString(_path),
        ethereum.Value.fromString(_receiptHash)
      ]
    );

    return result[0].toBoolean();
  }

  try_createReceipt(
    _company: Address,
    _employee: Address,
    _path: string,
    _receiptHash: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "createReceipt",
      "createReceipt(address,address,string,string):(bool)",
      [
        ethereum.Value.fromAddress(_company),
        ethereum.Value.fromAddress(_employee),
        ethereum.Value.fromString(_path),
        ethereum.Value.fromString(_receiptHash)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasReceipts(_company: Address, _employee: Address): boolean {
    let result = super.call(
      "hasReceipts",
      "hasReceipts(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_company),
        ethereum.Value.fromAddress(_employee)
      ]
    );

    return result[0].toBoolean();
  }

  try_hasReceipts(
    _company: Address,
    _employee: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasReceipts",
      "hasReceipts(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_company),
        ethereum.Value.fromAddress(_employee)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasReceipts1(_company: Address, _employee: Address): boolean {
    let result = super.call(
      "hasReceipts",
      "hasReceipts(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_company),
        ethereum.Value.fromAddress(_employee)
      ]
    );

    return result[0].toBoolean();
  }

  try_hasReceipts1(
    _company: Address,
    _employee: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasReceipts",
      "hasReceipts(address,address):(bool)",
      [
        ethereum.Value.fromAddress(_company),
        ethereum.Value.fromAddress(_employee)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class CreateReceiptCall extends ethereum.Call {
  get inputs(): CreateReceiptCall__Inputs {
    return new CreateReceiptCall__Inputs(this);
  }

  get outputs(): CreateReceiptCall__Outputs {
    return new CreateReceiptCall__Outputs(this);
  }
}

export class CreateReceiptCall__Inputs {
  _call: CreateReceiptCall;

  constructor(call: CreateReceiptCall) {
    this._call = call;
  }

  get _company(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _employee(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _path(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _receiptHash(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class CreateReceiptCall__Outputs {
  _call: CreateReceiptCall;

  constructor(call: CreateReceiptCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
